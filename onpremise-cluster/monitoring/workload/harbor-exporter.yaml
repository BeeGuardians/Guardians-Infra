apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-exporter
  namespace: ns-monitoring
  labels:
    app: harbor
    component: exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harbor
      component: exporter
  template:
    metadata:
      labels:
        app: harbor
        component: exporter
    spec:
      containers:
        - name: exporter
          image: goharbor/harbor-exporter:v2.10.0
          ports:
            - containerPort: 8001
          env:
            - name: HARBOR_METRIC_NAMESPACE
              value: harbor
            - name: HARBOR_URL
              value: "https://harbor.example.com"
            - name: HARBOR_USERNAME
              value: "admin"
            - name: HARBOR_PASSWORD
              value: "admin12345"
            - name: HARBOR_DATABASE_TYPE
              value: "PostgreSQL"
            - name: HARBOR_DATABASE_HOST
              value: "harbor-database.harbor.svc"
            - name: HARBOR_DATABASE_PORT
              value: "5432"
            - name: HARBOR_DATABASE_USERNAME
              value: "postgres"
            - name: HARBOR_DATABASE_PASSWORD
              value: "changeit"
            - name: HARBOR_DATABASE_DBNAME
              value: "registry"
            - name: HARBOR_REDIS_URL
              value: redis://harbor-redis.harbor.svc:6379
            - name: HARBOR_EXPORTER_METRICS_PATH
              value: /metrics
---
apiVersion: v1
kind: Service
metadata:
  name: harbor-exporter
  namespace: ns-monitoring
  labels:
    app: harbor
    component: exporter
spec:
  selector:
    app: harbor
    component: exporter
  ports:
    - name: http-metrics
      port: 8001
      targetPort: 8001
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: harbor-exporter
  namespace: ns-monitoring
  labels:
    release: prometheus-grafana
spec:
  selector:
    matchLabels:
      app: harbor
      component: exporter
  namespaceSelector:
    matchNames:
      - ns-monitoring
  endpoints:
    - port: http-metrics
      path: /metrics
      interval: 30s
